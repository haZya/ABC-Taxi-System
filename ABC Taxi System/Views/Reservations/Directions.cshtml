@model ABC_Taxi_System.Models.Reservation

@{
    ViewBag.Title = "Direction Details";
}

@if ((Model.User_Passenger == null && ViewData.ContainsKey("UserType") && ViewData["UserType"].ToString() == "Passenger") ||
    (Model.User_Passenger != null && ViewData.ContainsKey("UserType") && ViewData["UserType"].ToString() == "Passenger" &&
    ViewData.ContainsKey("Username") && ViewData["Username"].ToString() != Model.User_Passenger.Username) ||
    (Model.User_Driver == null && ViewData.ContainsKey("UserType") && ViewData["UserType"].ToString() == "Driver") ||
    (Model.User_Driver != null && ViewData.ContainsKey("UserType") && ViewData["UserType"].ToString() == "Driver" &&
    ViewData.ContainsKey("Username") && ViewData["Username"].ToString() != Model.User_Driver.Username))
{
    <div class="alert alert-warning text-align-center" style="margin-top:20px;">
        Sorry, you do not have the permission to access this page. @ViewBag.Message<strong><a href="/Home/Index">Go Back to Home Page</a></strong>
    </div>
}
else if (ViewData.ContainsKey("UserType") && ViewData["UserType"].ToString() == "Driver" && Model.User_Driver.DriverVehicle == null ||
    ViewData.ContainsKey("UserType") && ViewData["UserType"].ToString() == "Driver" && Model.User_Driver.DriverLocation == null)
{
    <div class="alert alert-danger text-align-center" style="margin-top:20px;">
        You have to add your vehicle and location details into the system before accessing this page. <strong><a href="/Home/Index">Go Back to Home Page</a></strong>
    </div>
}
else
{
    <h2>Direction Details</h2>
    if (Model.Passenger != null)
    {
        <h4>For: @Model.User_Passenger.FirstName @Model.User_Passenger.LastName | @Model.User_Passenger.Username</h4>
    }
    else
    {
        <h4>For: @Model.FirstName @Model.LastName</h4>
    }
    <hr />

    <div class="row">
        <div class="col-md-12" style="margin-bottom:8px">
            <div id="map" style="width:100%;height:400px;"></div>
        </div>
    </div>

    <div id="right-panel"></div>

    <p>
        @Html.ActionLink("Back to List", "Index", new { Id = ViewData["Username"] })
    </p>
}

@section Scripts {
    <script src="https://maps.googleapis.com/maps/api/js?key=@System.Web.Configuration.WebConfigurationManager.AppSettings["Google_API_Key"]&signed_in=true&libraries=places&callback=initMap" async defer></script>

    <script>
        // Const bounds of Sri Lanka
        var SRI_LANKA_BOUNDS = {
            north: 10,
            south: 5.9,
            west: 79,
            east: 82,
        };

        var map = null;
        var originPlaceId = null;
        var destinationPlaceId = null;
        var directionsService = null;
        var directionsDisplay = null;
        // Note: This example requires user consent to location sharing when
        // prompted by the browser. If user see the error "The Geolocation service
        // failed.", it means user probably did not give permission for the browser to
        // use location services.
        function initMap() {
            map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: 7.8731, lng: 80.7718 }, // Location of Sri Lanka
                restriction: {
                    latLngBounds: SRI_LANKA_BOUNDS,
                    strictBounds: false,
                },
                zoom: 10,
            });

            // Get pick-up and drop-off addresses
            var pickupLocation = '@ViewData["PickUp"]';
            var dropAddress = '@Model.DropStreetNo @Model.DropRoute, @Model.DropCity, Sri Lanka';

            // Convert the drop-off address into Place Id
            var geocoder = new google.maps.Geocoder();
            geocoder.geocode({ 'address': dropAddress }, function (results, status) {
                if (status === 'OK') {
                    destinationPlaceId = results[0].place_id;
                } else {
                    alert('Geocode was not successful for the following reason: ' + status);
                }

                // Add the traffic layer
                var trafficLayer = new google.maps.TrafficLayer();
                trafficLayer.setMap(map);

                // Add directions services and set up the direction panel
                directionsService = new google.maps.DirectionsService;
                directionsDisplay = new google.maps.DirectionsRenderer;
                directionsDisplay.setMap(map);
                directionsDisplay.setPanel(document.getElementById('right-panel'));

                // Set the directions in the map and panel
                directionsService.route({
                    origin: pickupLocation,
                    destination: { 'placeId': destinationPlaceId },
                    travelMode: 'DRIVING'
                }, function (response, status) {
                    if (status === 'OK') {
                        directionsDisplay.setDirections(response);
                    } else {
                        window.alert('Directions request failed due to ' + status);
                    }
                });
            });
        }
    </script>
}